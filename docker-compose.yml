version: "3"
services:
  strapi:
    container_name: strapi
    build: .
    image: strapi:latest
    restart: unless-stopped
    env_file: .env  # If you're using an env_file, no need for environment block here
    environment:
      # Define environment variables explicitly if needed, or keep them in the .env file
      NODE_ENV: ${NODE_ENV}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
    volumes:
      # Mount the config, src, and public directories with correct permissions
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./public/uploads:/opt/app/public/uploads
      # Optionally avoid mounting package.json and yarn.lock if you're building during the Docker build stage
      # - ./package.json:/opt/package.json
      # - ./yarn.lock:/opt/yarn.lock
      # Mount .env file for Strapi to use
      - ./.env:/opt/app/.env
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64  # For platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env  # Use the .env file for database credentials
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/  # Use Docker volumes for persistent data
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
